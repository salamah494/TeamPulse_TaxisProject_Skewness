{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPd85FsAH89E2vOv2Tag9xe"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"zS8eP3Kuvkrz"},"outputs":[],"source":["#import python libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["#assign a variable and read the dataset\n","df = pd.read_csv('marketing_sales_data.csv')"],"metadata":{"id":"8xp9n8gYv-gn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#checking the top rows\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZgI7v8fRwXRr","executionInfo":{"status":"ok","timestamp":1739881870669,"user_tz":0,"elapsed":86,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"27bc92ab-6f8f-4254-d262-13d2eac180b4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       TV      Radio  Social Media Influencer       Sales\n","0     Low   3.518070      2.293790      Micro   55.261284\n","1     Low   7.756876      2.572287       Mega   67.574904\n","2    High  20.348988      1.227180      Micro  272.250108\n","3  Medium  20.108487      2.728374       Mega  195.102176\n","4    High  31.653200      7.776978       Nano  273.960377"],"text/html":["\n","  <div id=\"df-21bee718-38c2-4497-be43-a04f331fc2b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TV</th>\n","      <th>Radio</th>\n","      <th>Social Media</th>\n","      <th>Influencer</th>\n","      <th>Sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Low</td>\n","      <td>3.518070</td>\n","      <td>2.293790</td>\n","      <td>Micro</td>\n","      <td>55.261284</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Low</td>\n","      <td>7.756876</td>\n","      <td>2.572287</td>\n","      <td>Mega</td>\n","      <td>67.574904</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>High</td>\n","      <td>20.348988</td>\n","      <td>1.227180</td>\n","      <td>Micro</td>\n","      <td>272.250108</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Medium</td>\n","      <td>20.108487</td>\n","      <td>2.728374</td>\n","      <td>Mega</td>\n","      <td>195.102176</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>High</td>\n","      <td>31.653200</td>\n","      <td>7.776978</td>\n","      <td>Nano</td>\n","      <td>273.960377</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21bee718-38c2-4497-be43-a04f331fc2b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-21bee718-38c2-4497-be43-a04f331fc2b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-21bee718-38c2-4497-be43-a04f331fc2b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bc328702-c16d-4d2b-8988-c9fd0bf266ad\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bc328702-c16d-4d2b-8988-c9fd0bf266ad')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bc328702-c16d-4d2b-8988-c9fd0bf266ad button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 572,\n  \"fields\": [\n    {\n      \"column\": \"TV\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Low\",\n          \"High\",\n          \"Medium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.290933136959913,\n        \"min\": 0.109105522,\n        \"max\": 42.27157869,\n        \"num_unique_values\": 572,\n        \"samples\": [\n          10.42906573,\n          15.02521022,\n          22.2599302\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Social Media\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.238378203995895,\n        \"min\": 3.13e-05,\n        \"max\": 11.40362504,\n        \"num_unique_values\": 572,\n        \"samples\": [\n          4.37599992,\n          4.47224007,\n          3.354030175\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Influencer\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Mega\",\n          \"Macro\",\n          \"Micro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 89.87158140351548,\n        \"min\": 33.50980953,\n        \"max\": 357.7881952,\n        \"num_unique_values\": 572,\n        \"samples\": [\n          138.4315947,\n          151.7553952,\n          283.2511074\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["#checking the make up\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l8JNCL-KwjVX","executionInfo":{"status":"ok","timestamp":1739881870670,"user_tz":0,"elapsed":84,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"ce0301c0-58e6-46de-9fbd-1888c763a2b5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 572 entries, 0 to 571\n","Data columns (total 5 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   TV            572 non-null    object \n"," 1   Radio         572 non-null    float64\n"," 2   Social Media  572 non-null    float64\n"," 3   Influencer    572 non-null    object \n"," 4   Sales         572 non-null    float64\n","dtypes: float64(3), object(2)\n","memory usage: 22.5+ KB\n"]}]},{"cell_type":"code","source":["#checking the rows and columns\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eVCqNspJwwAE","executionInfo":{"status":"ok","timestamp":1739881870670,"user_tz":0,"elapsed":77,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"c9566cf2-3e2c-42a1-f46d-e661079c315c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(572, 5)"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["#understanding the data\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"VAo3A9C0w4_c","executionInfo":{"status":"ok","timestamp":1739881870684,"user_tz":0,"elapsed":87,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"8a7f12ce-7e1f-4801-8c25-6467f0c492f8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Radio  Social Media       Sales\n","count  572.000000    572.000000  572.000000\n","mean    17.520616      3.333803  189.296908\n","std      9.290933      2.238378   89.871581\n","min      0.109106      0.000031   33.509810\n","25%     10.699556      1.585549  118.718722\n","50%     17.149517      3.150111  184.005362\n","75%     24.606396      4.730408  264.500118\n","max     42.271579     11.403625  357.788195"],"text/html":["\n","  <div id=\"df-f6aca7eb-c9d6-4c6c-827c-5e35df7834a0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Radio</th>\n","      <th>Social Media</th>\n","      <th>Sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>572.000000</td>\n","      <td>572.000000</td>\n","      <td>572.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>17.520616</td>\n","      <td>3.333803</td>\n","      <td>189.296908</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>9.290933</td>\n","      <td>2.238378</td>\n","      <td>89.871581</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.109106</td>\n","      <td>0.000031</td>\n","      <td>33.509810</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>10.699556</td>\n","      <td>1.585549</td>\n","      <td>118.718722</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>17.149517</td>\n","      <td>3.150111</td>\n","      <td>184.005362</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>24.606396</td>\n","      <td>4.730408</td>\n","      <td>264.500118</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>42.271579</td>\n","      <td>11.403625</td>\n","      <td>357.788195</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6aca7eb-c9d6-4c6c-827c-5e35df7834a0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f6aca7eb-c9d6-4c6c-827c-5e35df7834a0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f6aca7eb-c9d6-4c6c-827c-5e35df7834a0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8e67302f-e5b0-4d60-9219-e3e243d6626c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e67302f-e5b0-4d60-9219-e3e243d6626c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8e67302f-e5b0-4d60-9219-e3e243d6626c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Radio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 196.48150072205178,\n        \"min\": 0.109105522,\n        \"max\": 572.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          17.520615996395104,\n          17.14951748,\n          572.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Social Media\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.92585404998832,\n        \"min\": 3.13e-05,\n        \"max\": 572.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.3338034058548947,\n          3.150110524,\n          572.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 172.69683970373538,\n        \"min\": 33.50980953,\n        \"max\": 572.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          189.29690778734266,\n          184.00536195,\n          572.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["#Part b\n","#exploring the data\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"VFnnZSJYxCXa","executionInfo":{"status":"ok","timestamp":1739881870685,"user_tz":0,"elapsed":86,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"da6d850d-180f-4a3c-b5b0-141aff6453fe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["TV              0\n","Radio           0\n","Social Media    0\n","Influencer      0\n","Sales           0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>TV</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Radio</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Social Media</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Influencer</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sales</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["#encode the Tv column\n","df['TV']=df['TV'].map({'Low':0,'Medium':1,'High':2})\n","\n","#display output\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Hn5SQ1eXy4wa","executionInfo":{"status":"ok","timestamp":1739881870685,"user_tz":0,"elapsed":84,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"7c33b5be-6d86-44f7-87a6-d52a95a97646"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   TV      Radio  Social Media Influencer       Sales\n","0   0   3.518070      2.293790      Micro   55.261284\n","1   0   7.756876      2.572287       Mega   67.574904\n","2   2  20.348988      1.227180      Micro  272.250108\n","3   1  20.108487      2.728374       Mega  195.102176\n","4   2  31.653200      7.776978       Nano  273.960377"],"text/html":["\n","  <div id=\"df-39f3fb3c-05b9-40a9-a916-4eefdbd46801\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TV</th>\n","      <th>Radio</th>\n","      <th>Social Media</th>\n","      <th>Influencer</th>\n","      <th>Sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3.518070</td>\n","      <td>2.293790</td>\n","      <td>Micro</td>\n","      <td>55.261284</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>7.756876</td>\n","      <td>2.572287</td>\n","      <td>Mega</td>\n","      <td>67.574904</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>20.348988</td>\n","      <td>1.227180</td>\n","      <td>Micro</td>\n","      <td>272.250108</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>20.108487</td>\n","      <td>2.728374</td>\n","      <td>Mega</td>\n","      <td>195.102176</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>31.653200</td>\n","      <td>7.776978</td>\n","      <td>Nano</td>\n","      <td>273.960377</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39f3fb3c-05b9-40a9-a916-4eefdbd46801')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39f3fb3c-05b9-40a9-a916-4eefdbd46801 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39f3fb3c-05b9-40a9-a916-4eefdbd46801');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-360e0b3c-7973-4e79-950c-2fafc6b45a58\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-360e0b3c-7973-4e79-950c-2fafc6b45a58')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-360e0b3c-7973-4e79-950c-2fafc6b45a58 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 572,\n  \"fields\": [\n    {\n      \"column\": \"TV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.290933136959913,\n        \"min\": 0.109105522,\n        \"max\": 42.27157869,\n        \"num_unique_values\": 572,\n        \"samples\": [\n          10.42906573,\n          15.02521022,\n          22.2599302\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Social Media\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.238378203995895,\n        \"min\": 3.13e-05,\n        \"max\": 11.40362504,\n        \"num_unique_values\": 572,\n        \"samples\": [\n          4.37599992,\n          4.47224007,\n          3.354030175\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Influencer\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Mega\",\n          \"Macro\",\n          \"Micro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 89.87158140351548,\n        \"min\": 33.50980953,\n        \"max\": 357.7881952,\n        \"num_unique_values\": 572,\n        \"samples\": [\n          138.4315947,\n          151.7553952,\n          283.2511074\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["#encode the Influencer column\n","df['Influencer']=df['Influencer'].map({'Nano':0,'Micro':1,'Mega':2})\n","\n","#display output\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"0RUW8to20C0B","executionInfo":{"status":"ok","timestamp":1739881870685,"user_tz":0,"elapsed":82,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"3892af4f-65c6-40b1-85ac-d382704b4fef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   TV      Radio  Social Media  Influencer       Sales\n","0   0   3.518070      2.293790         1.0   55.261284\n","1   0   7.756876      2.572287         2.0   67.574904\n","2   2  20.348988      1.227180         1.0  272.250108\n","3   1  20.108487      2.728374         2.0  195.102176\n","4   2  31.653200      7.776978         0.0  273.960377"],"text/html":["\n","  <div id=\"df-8eb6543c-b6ab-4247-9164-df688a349b67\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TV</th>\n","      <th>Radio</th>\n","      <th>Social Media</th>\n","      <th>Influencer</th>\n","      <th>Sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3.518070</td>\n","      <td>2.293790</td>\n","      <td>1.0</td>\n","      <td>55.261284</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>7.756876</td>\n","      <td>2.572287</td>\n","      <td>2.0</td>\n","      <td>67.574904</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>20.348988</td>\n","      <td>1.227180</td>\n","      <td>1.0</td>\n","      <td>272.250108</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>20.108487</td>\n","      <td>2.728374</td>\n","      <td>2.0</td>\n","      <td>195.102176</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>31.653200</td>\n","      <td>7.776978</td>\n","      <td>0.0</td>\n","      <td>273.960377</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8eb6543c-b6ab-4247-9164-df688a349b67')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8eb6543c-b6ab-4247-9164-df688a349b67 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8eb6543c-b6ab-4247-9164-df688a349b67');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cb0da805-b744-4a06-abf5-b3f0b934074e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb0da805-b744-4a06-abf5-b3f0b934074e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cb0da805-b744-4a06-abf5-b3f0b934074e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 572,\n  \"fields\": [\n    {\n      \"column\": \"TV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.290933136959913,\n        \"min\": 0.109105522,\n        \"max\": 42.27157869,\n        \"num_unique_values\": 572,\n        \"samples\": [\n          10.42906573,\n          15.02521022,\n          22.2599302\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Social Media\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.238378203995895,\n        \"min\": 3.13e-05,\n        \"max\": 11.40362504,\n        \"num_unique_values\": 572,\n        \"samples\": [\n          4.37599992,\n          4.47224007,\n          3.354030175\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Influencer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8124885634614455,\n        \"min\": 0.0,\n        \"max\": 2.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          2.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 89.87158140351548,\n        \"min\": 33.50980953,\n        \"max\": 357.7881952,\n        \"num_unique_values\": 572,\n        \"samples\": [\n          138.4315947,\n          151.7553952,\n          283.2511074\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["#plot Tv against Sales\n","sns.barplot(x='TV',y='Sales',data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"mqlBJRAx1xEa","executionInfo":{"status":"ok","timestamp":1739881870685,"user_tz":0,"elapsed":81,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"249c1288-0156-477f-9e37-77fe2c14beaf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='TV', ylabel='Sales'>"]},"metadata":{},"execution_count":65},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#calculate skewness from graph above\n","df['TV'].skew()\n","\n","#display output\n","print(skewness)\n","if skewness > 0:\n","    print(\"Positive Skewness\")\n","else:\n","    print(\"Negative Skewness\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DrjKka6D2uLx","executionInfo":{"status":"ok","timestamp":1739881870686,"user_tz":0,"elapsed":76,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"cead456a-b854-42b3-8718-045d2744b821"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.11018144822285272\n","Positive Skewness\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"Wv0zQsYP3A5g"}},{"cell_type":"code","source":["#plot Radio against Sales\n","sns.barplot(x='Radio',y='Sales',data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"x2YwcdZt44WK","executionInfo":{"status":"ok","timestamp":1739881875768,"user_tz":0,"elapsed":5154,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"4e652e63-2e15-4e92-8981-ebef0fad8ac5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Radio', ylabel='Sales'>"]},"metadata":{},"execution_count":67},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#calculate skewness from graph above\n","df['Radio'].skew()\n","\n","#display output\n","print(skewness)\n","if skewness > 0:\n","    print(\"Positive Skewness\")\n","else:\n","    print(\"Negative Skewness\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xXEW-F0J52Bb","executionInfo":{"status":"ok","timestamp":1739881875769,"user_tz":0,"elapsed":10,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"f8bb04a4-fcd7-44ee-9ab6-fe7951797e6d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.11018144822285272\n","Positive Skewness\n"]}]},{"cell_type":"code","source":["#plot Social Media against Sales\n","sns.barplot(x='Social Media',y='Sales',data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"favDyjxS46hy","executionInfo":{"status":"ok","timestamp":1739881880250,"user_tz":0,"elapsed":4489,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"28bc1399-3430-4802-8ee0-b91fc6e9a289"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Social Media', ylabel='Sales'>"]},"metadata":{},"execution_count":69},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAmkAAAGwCAYAAADyqPKoAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAMClJREFUeJzt3X9cVHWi//E3oKDEr5BgJNEyUyJ/hoVzt9RVEtFcKu5WG6mZD33UYlvStY3HGpbeLuW22tay9uiuhaZma5tueFvNKNFNUKNQV82bZhdaHTRNSEp+zvePvp5tFBTGGebMzOv5eJzHgznnc875fM6cH+/5nDNDgN1utwsAAACmEujpCgAAAOB8hDQAAAATIqQBAACYECENAADAhAhpAAAAJkRIAwAAMCFCGgAAgAl18XQFzKClpUVHjhxReHi4AgICPF0dAADQDna7Xd9++63i4+MVGOh7/U6ENElHjhxRQkKCp6sBAACcUFVVpV69enm6Gi5HSJMUHh4u6Yc3OSIiwsO1AQAA7VFbW6uEhATjOu5rCGmScYszIiKCkAYAgJfx1UeVfO8GLgAAgA8gpAEAAJgQIQ0AAMCECGkAAAAmREgDAAAwIUIaAACACRHSAAAATIiQBgAAYEKENAAAABMipAEAAJgQIQ0AAMCECGkAAAAmREgDAAAwIUIaAACACRHSAAAATIiQBgAAPC55znJPV8F0CGkAAAAmREgDAAAwIUIaAAC4JJ19q9Jfbo16NKQtWbJEgwcPVkREhCIiImS1WvW3v/3NmD569GgFBAQ4DA8++KDDMiorKzVx4kSFhoYqNjZWc+bMUVNTU2c3BQBgIv5yEYdv6+LJlffq1UvPPvusrr32Wtntdi1btkwZGRn69NNPdf3110uSZsyYofnz5xvzhIaGGn83Nzdr4sSJslgs2rZtm44ePaopU6aoa9eu+q//+q9Obw8AAO2VPGe5yn87xdPVgIl5tCdt0qRJmjBhgq699lr1799fzzzzjMLCwlRWVmaUCQ0NlcViMYaIiAhj2nvvvad9+/ZpxYoVGjp0qNLT07VgwQIVFBSooaGhzfXW19ertrbWYQDgXegpcT22KS4V+5BrmeaZtObmZq1evVp1dXWyWq3G+JUrVyomJkYDBw5Ubm6uvvvuO2NaaWmpBg0apLi4OGNcWlqaamtrtXfv3jbXlZ+fr8jISGNISEhwT6MAAACc5NHbnZK0Z88eWa1WnTlzRmFhYVq7dq2SkpIkSffee6/69Omj+Ph47d69W7/+9a914MABvf3225Ikm83mENAkGa9tNlub68zNzVVOTo7xura2lqAGAABMxeMhbcCAAaqoqFBNTY3eeustTZ06VSUlJUpKStLMmTONcoMGDVLPnj01duxYHTp0SNdcc43T6wwJCVFISIgrqg8ApsTzTv6L9953ePx2Z3BwsPr166fk5GTl5+dryJAh+v3vf99q2ZSUFEnSwYMHJUkWi0XV1dUOZc6+tlgsbqw1AF/A8zPoCPYXdDaPh7RztbS0qL6+vtVpFRUVkqSePXtKkqxWq/bs2aNjx44ZZTZt2qSIiAjjlikAAO1FEIOZePR2Z25urtLT09W7d299++23WrVqlTZv3qyNGzfq0KFDWrVqlSZMmKAePXpo9+7dmj17tkaOHKnBgwdLksaNG6ekpCRNnjxZCxculM1m09y5c5Wdnc3tTAAA4NU82pN27NgxTZkyRQMGDNDYsWO1c+dObdy4UbfeequCg4P1/vvva9y4cUpMTNRjjz2mzMxMFRUVGfMHBQVp/fr1CgoKktVq1X333acpU6Y4/K4aAADnoscM3sCjPWlLly5tc1pCQoJKSkouuow+ffro3XffdWW1AAAAPM50z6QBAACAkAYA8HPc+jQn3hdCGgAAgCkR0gAAAEyIkAYAAGBChDQAAOB1/OGZNUIaAMCv+MPF3Vtc7L3w9/eKkAYAALyCv4U2QhoAAIAJEdIAAF7N33pXfBHvYesIaQAAACZESAMAADAhQhoAwC9xiw1mR0gDAACXjNDreoQ0AC7HyRrwTRzbnYuQBgAAYEKENAAAABMipAEAAJgQIQ0AgA7i2Sx0BkIaAAA+wh3/sJxA6jmENADwElwsAf9CSDsHJ0EAAGAGhDQAcDE+7AFwBUIaAACACRHSAADoBPSwoqMIaQB8ChfCf2FbAN6NkAbALxBYgNZxbJgXIQ2A0zi5o6PYZ8yJ98WcCGkAAAAmREgDAB9ATwjgewhpAACvcqFASliFLyGkAQAAmBAhDQDawSw9NGapBwD3I6QBQCchYAHoCEIaAJyDMAUzY//0H4Q0AAAAEyKkAYAJ0DsC4FyENAAA4Bbu/vAxcu4bbl2+p3k0pC1ZskSDBw9WRESEIiIiZLVa9be//c2YfubMGWVnZ6tHjx4KCwtTZmamqqurHZZRWVmpiRMnKjQ0VLGxsZozZ46ampo6uykAAAAu5dGQ1qtXLz377LMqLy/Xxx9/rDFjxigjI0N79+6VJM2ePVtFRUVas2aNSkpKdOTIEd15553G/M3NzZo4caIaGhq0bds2LVu2TIWFhcrLy/NUkwAAAFzCoyFt0qRJmjBhgq699lr1799fzzzzjMLCwlRWVqaamhotXbpUixYt0pgxY5ScnKzXXntN27ZtU1lZmSTpvffe0759+7RixQoNHTpU6enpWrBggQoKCtTQ0ODJpgHwETwrBsBTTPNMWnNzs1avXq26ujpZrVaVl5ersbFRqampRpnExET17t1bpaWlkqTS0lINGjRIcXFxRpm0tDTV1tYavXGtqa+vV21trcMAAHAdwi1w6Twe0vbs2aOwsDCFhITowQcf1Nq1a5WUlCSbzabg4GBFRUU5lI+Li5PNZpMk2Ww2h4B2dvrZaW3Jz89XZGSkMSQkJLi2UQAAv0dQ/QHbwXkeD2kDBgxQRUWFtm/froceekhTp07Vvn373LrO3Nxc1dTUGENVVZVb1wcAcA1/ueD7SztxYV08XYHg4GD169dPkpScnKydO3fq97//ve6++241NDTo1KlTDr1p1dXVslgskiSLxaIdO3Y4LO/stz/PlmlNSEiIQkJCXNwSAAAA1/F4T9q5WlpaVF9fr+TkZHXt2lXFxcXGtAMHDqiyslJWq1WSZLVatWfPHh07dswos2nTJkVERCgpKanT6w4AAOAqHg1pubm52rJli7788kvt2bNHubm52rx5s7KyshQZGanp06crJydHH374ocrLyzVt2jRZrVaNGDFCkjRu3DglJSVp8uTJ2rVrlzZu3Ki5c+cqOzubnjLAB1zKLR9uFwHwdh693Xns2DFNmTJFR48eVWRkpAYPHqyNGzfq1ltvlSQtXrxYgYGByszMVH19vdLS0vTHP/7RmD8oKEjr16/XQw89JKvVqssuu0xTp07V/PnzPdUkAAAAl/BoSFu6dOkFp3fr1k0FBQUqKChos0yfPn307rvvurpqAAAAHmW6Z9IAAABASAMAmJwvPl/oi22C6xHSAACmQoABfkBIAwDATQicuBSENABwIS7KAFyFkAYAAGBChDQAAJzU2T2n3tBT6w119BaENAAAABMipAEAAJgQIQ0AAMCECGkAAAAmREj7kZFz3/B0FeBmPNBqXrw3AOCIkAYAAGBChDSgk9FjBDNgP0R7uHM/YR+8OEIaAACACRHSAAAATIiQhnajaxoAzINzsu8jpAEA4CHJc5YTttAmQhoAj+ICBQCtI6QBAOACfOCAqxHS4HGc2AD4O86DaA0hDQAAuBUh1DmENMBJnHQA+CPOfZ2HkAYAAGBChDQAAGAq9Nb9gJAG4II4WQL+hWPePAhp8HmccAB4GuchOIOQBtPgJAbA33EexI8R0gC0CxcPdBT7DNzBn/YrQhoAAC7kTyEC7kVIAwAAMCFCGgC/096eDnpEzudv28Tf2gtzIaQBwCXqjAs5YcE78D7BlQhpAAAAJkRIcyE+QQEAAFchpAGAh/DBDsCFENIAAABMiJAGAABgQh4Nafn5+brxxhsVHh6u2NhY3X777Tpw4IBDmdGjRysgIMBhePDBBx3KVFZWauLEiQoNDVVsbKzmzJmjpqamzmwKAACAS3k0pJWUlCg7O1tlZWXatGmTGhsbNW7cONXV1TmUmzFjho4ePWoMCxcuNKY1Nzdr4sSJamho0LZt27Rs2TIVFhYqLy+vs5sDAD7Nlc/Q8TwecHFdPLnyDRs2OLwuLCxUbGysysvLNXLkSGN8aGioLBZLq8t47733tG/fPr3//vuKi4vT0KFDtWDBAv3617/WU089peDgYLe2AQAAwB1M9UxaTU2NJCk6Otph/MqVKxUTE6OBAwcqNzdX3333nTGttLRUgwYNUlxcnDEuLS1NtbW12rt3b6vrqa+vV21trcMAAOgYesMA9zJNSGtpadGjjz6qn/zkJxo4cKAx/t5779WKFSv04YcfKjc3V6+//rruu+8+Y7rNZnMIaJKM1zabrdV15efnKzIy0hgSEhLc0CLAO3HhBQBzME1Iy87O1j/+8Q+tXr3aYfzMmTOVlpamQYMGKSsrS8uXL9fatWt16NAhp9eVm5urmpoaY6iqqrrU6sPHEFQA38Ix3Tq2i7mZIqTNmjVL69ev14cffqhevXpdsGxKSook6eDBg5Iki8Wi6upqhzJnX7f1HFtISIgiIiIcBsBbcFL1Xby3AH7MoyHNbrdr1qxZWrt2rT744ANdffXVF52noqJCktSzZ09JktVq1Z49e3Ts2DGjzKZNmxQREaGkpCS31BsAzIRwB/gmj367Mzs7W6tWrdJf//pXhYeHG8+QRUZGqnv37jp06JBWrVqlCRMmqEePHtq9e7dmz56tkSNHavDgwZKkcePGKSkpSZMnT9bChQtls9k0d+5cZWdnKyQkxJPNAwAAHcSHjn/xaE/akiVLVFNTo9GjR6tnz57G8Oabb0qSgoOD9f7772vcuHFKTEzUY489pszMTBUVFRnLCAoK0vr16xUUFCSr1ar77rtPU6ZM0fz58z3VLABehosC4Ki1Y4LjpPN5tCfNbrdfcHpCQoJKSkouupw+ffro3XffdVW1AAAAPM4UXxyA9+MTFvwdxwAAVyOkAR7GxR0A0BpCGuBDCHwAXIXziecR0gAAAEyIkAbAp9EbAHg3fz6GCWkAgPP484VRov3uwnbtGEIa0Ik4QQHO4diBPyKkAQC8AkEN/oaQBgBwOwIW0HGENAAA/ABB2fsQ0tAmDmgAADyHkAaXI9wBrsPxBPgvQhqADiM4wBux38LbENK8CCcYwDdxbLuGL25HX2wT2o+QZhK+diD6WnsAAOhshDQA6GR8iAHQHoQ0wIcRBgCYBeejjiOkAQAAmBAhDQAAwIQIaS5AFy4AAHA1QhoAwGO87UOut9UX3o2QBgAAYEKENADwM/QGwd3Yx1yDkAa388WD1Rfb1FFsAwBwL0Ia8P8ROlyL7QkAl4aQBgBOIIQCcDdCGi6KixEAmAvnZf9ASAPQKi4CAOBZhDQAAAATIqQBAOCj6BH3boQ0AAAAEyKkASbEp18AACENgMeZKZSaqS4A/BshzUmcyAEAgDsR0gAApsMHYYCQBgCAqRBQcRYhDQAAwIQIaQAAACbkkpDW3NysiooKffPNNx2aLz8/XzfeeKPCw8MVGxur22+/XQcOHHAoc+bMGWVnZ6tHjx4KCwtTZmamqqurHcpUVlZq4sSJCg0NVWxsrObMmaOmpqZLbld70C0NoCM4Z6Czsc95L6dC2qOPPqqlS5dK+iGgjRo1SjfccIMSEhK0efPmdi+npKRE2dnZKisr06ZNm9TY2Khx48aprq7OKDN79mwVFRVpzZo1Kikp0ZEjR3TnnXca05ubmzVx4kQ1NDRo27ZtWrZsmQoLC5WXl+dM0+AjOCkBrsPx5P14D72TUyHtrbfe0pAhQyRJRUVFOnz4sD777DPNnj1bv/nNb9q9nA0bNuj+++/X9ddfryFDhqiwsFCVlZUqLy+XJNXU1Gjp0qVatGiRxowZo+TkZL322mvatm2bysrKJEnvvfee9u3bpxUrVmjo0KFKT0/XggULVFBQoIaGBmeaB/g8Ttidi+0NwBlOhbSvv/5aFotFkvTuu+/q5z//ufr3768HHnhAe/bscboyNTU1kqTo6GhJUnl5uRobG5WammqUSUxMVO/evVVaWipJKi0t1aBBgxQXF2eUSUtLU21trfbu3dvqeurr61VbW+swAO7CBRqAr+G81jmcCmlxcXHat2+fmpubtWHDBt16662SpO+++05BQUFOVaSlpUWPPvqofvKTn2jgwIGSJJvNpuDgYEVFRZ23fpvNZpT5cUA7O/3stNbk5+crMjLSGBISEpyqszfhgAIAwLs4FdKmTZumu+66SwMHDlRAQIDR07V9+3YlJiY6VZHs7Gz94x//0OrVq52avyNyc3NVU1NjDFVVVW5fJwAAQEd0cWamp556SgMHDlRVVZV+/vOfKyQkRJIUFBSkJ554osPLmzVrltavX68tW7aoV69exniLxaKGhgadOnXKoTeturrauN1qsVi0Y8cOh+Wd/fbn2TLnCgkJMeoMwHfRgwzAmzkV0iTp3//93yX98BMZZ02dOrVDy7Db7Xr44Ye1du1abd68WVdffbXD9OTkZHXt2lXFxcXKzMyUJB04cECVlZWyWq2SJKvVqmeeeUbHjh1TbGysJGnTpk2KiIhQUlKSs80DAADwKKdudzY3N2vBggW68sorFRYWpi+++EKS9OSTTxo/zdEe2dnZWrFihVatWqXw8HDZbDbZbDZ9//33kqTIyEhNnz5dOTk5+vDDD1VeXq5p06bJarVqxIgRkqRx48YpKSlJkydP1q5du7Rx40bNnTtX2dnZ9JYBAACv5VRIe+aZZ1RYWKiFCxcqODjYGD9w4ED96U9/avdylixZopqaGo0ePVo9e/Y0hjfffNMos3jxYt12223KzMzUyJEjZbFY9PbbbxvTg4KCtH79egUFBclqteq+++7TlClTNH/+fGeaBsCNuP0IAO3n1O3O5cuX65VXXtHYsWP14IMPGuOHDBmizz77rN3LsdvtFy3TrVs3FRQUqKCgoM0yffr00bvvvtvu9QIAOkfynOUq/+0UT1cD8EpO9aT985//VL9+/c4b39LSosbGxkuuFADA/ejZBMzNqZCWlJSkrVu3njf+rbfe0rBhwy65UoA7cWFCR/14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nDjhsnVcccUVLlvWjyUkJOi1117TiBEjjHFr165VWFiYTp486fL1RUdHu3yZAHwfPWkAOuzUqVPaunWrnnvuOf30pz9Vnz59dNNNNyk3N1c/+9nPjHKVlZXKyMhQWFiYIiIidNddd6m6utphWUVFRbrxxhvVrVs3xcTE6I477jCmnXu7c9GiRRo0aJAuu+wyJSQk6Je//KVOnz7d4fpPnTpVq1ev1vfff2+Me/XVVzV16tTzylZVVemuu+5SVFSUoqOjlZGRoS+//NKY3tzcrJycHEVFRalHjx56/PHHde6/RD73dufrr7+u4cOHKzw8XBaLRffee6+OHTvW4XYA8G2ENAAdFhYWprCwMK1bt0719fWtlmlpaVFGRoZOnjypkpISbdq0SV988YXuvvtuo8z//M//6I477tCECRP06aefqri4WDfddFOb6w0MDNSLL76ovXv3atmyZfrggw/0+OOPd7j+ycnJuuqqq/SXv/xF0g9hcsuWLZo8ebJDucbGRqWlpSk8PFxbt27VRx99pLCwMI0fP14NDQ2SpN/97ncqLCzUq6++qr///e86efKk1q5de8H1NzY2asGCBdq1a5fWrVunL7/8Uvfff3+H2wHAx9kBwAlvvfWW/fLLL7d369bN/m//9m/23Nxc+65du4zp7733nj0oKMheWVlpjNu7d69dkn3Hjh12u91ut1qt9qysrDbX0adPH/vixYvbnL5mzRp7jx49jNevvfaaPTIy8oL1lmRfu3at/YUXXrD/9Kc/tdvtdvvTTz9tv+OOO+zffPONXZL9ww8/tNvtdvvrr79uHzBggL2lpcWYv76+3t69e3f7xo0b7Xa73d6zZ0/7woULjemNjY32Xr162TMyMoxxo0aNsj/yyCNt1mnnzp12SfZvv/32gnUH4F/oSQPglMzMTB05ckTvvPOOxo8fr82bN+uGG25QYWGhJGn//v1KSEhQQkKCMU9SUpKioqK0f/9+SVJFRYXGjh3b7nW+//77Gjt2rK688kqFh4dr8uTJOnHihL777rsO1/++++5TaWmpvvjiCxUWFuqBBx44r8yuXbt08OBBhYeHG72H0dHROnPmjA4dOqSamhodPXpUKSkpxjxdunTR8OHDL7ju8vJyTZo0Sb1791Z4eLhGjRol6YcePQA4i5AGwGndunXTrbfeqieffFLbtm3T/fffr3nz5rV7/u7du7e77JdffqnbbrtNgwcP1l/+8heVl5eroKBAkoxbjx3Ro0cP3XbbbZo+fbrOnDmj9PT088qcPn1aycnJqqiocBj+93//V/fee2+H1ylJdXV1SktLU0REhFauXKmdO3cat0edaQcA30VIA+AySUlJqqurkyRdd911qqqqUlVVlTF93759OnXqlJKSkiRJgwcPVnFxcbuWXV5erpaWFv3ud7/TiBEj1L9/fx05cuSS6vvAAw9o8+bNmjJlioKCgs6bfsMNN+jzzz9XbGys+vXr5zBERkYqMjJSPXv21Pbt2415mpqaVF5e3uY6P/vsM504cULPPvusbrnlFiUmJvKlAQCtIqQB6LATJ05ozJgxWrFihXbv3q3Dhw9rzZo1WrhwoTIyMiRJqampGjRokLKysvTJJ59ox44dmjJlikaNGmXcDpw3b57eeOMNzZs3T/v379eePXv03HPPtbrOfv36qbGxUS+99JK++OILvf7663r55ZcvqR3jx4/X8ePHNX/+/FanZ2VlKSYmRhkZGdq6dasOHz6szZs361e/+pW++uorSdIjjzyiZ599VuvWrdNnn32mX/7ylzp16lSb6+zdu7eCg4ONdrzzzjv8hhqAVhHSAHRYWFiYUlJStHjxYo0cOVIDBw7Uk08+qRkzZugPf/iDpB9+NPavf/2rLr/8co0cOVKpqanq27ev3nzzTWM5o0eP1po1a/TOO+9o6NChGjNmjHbs2NHqOocMGaJFixbpueee08CBA7Vy5Url5+dfUjsCAgIUExOj4ODgVqeHhoZqy5Yt6t27t+68805dd911xu3RiIgISdJjjz2myZMna+rUqbJarQoPD3f4GZFzXXHFFSosLNSaNWuUlJSkZ599Vs8///wltQOAbwqw28/5QR8AAAB4HD1pAAAAJkRIAwAAMCFCGgAAgAkR0gAAAEyIkAYAAGBChDQAAAATIqQBAACYECENAADAhAhpAAAAJkRIAwAAMCFCGgAAgAn9PybG/O710YczAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["#calculate skewness from graph above\n","df['Social Media'].skew()\n","\n","#display output\n","print(skewness)\n","if skewness > 0:\n","    print(\"Positive Skewness\")\n","else:\n","    print(\"Negative Skewness\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g3AeQicu6ojN","executionInfo":{"status":"ok","timestamp":1739881880250,"user_tz":0,"elapsed":27,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"53dc346d-5627-44e1-91d0-0e8146e882f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.11018144822285272\n","Positive Skewness\n"]}]},{"cell_type":"code","source":["#plot Influencer against Sales\n","sns.barplot(x='Influencer',y='Sales',data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"vS2EmWvs47fu","executionInfo":{"status":"ok","timestamp":1739881880251,"user_tz":0,"elapsed":25,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"e92f47b2-74f7-40d0-ec91-76859f3496cc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Influencer', ylabel='Sales'>"]},"metadata":{},"execution_count":71},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#calculate skewness from graph above\n","df['Influencer'].skew()\n","\n","#display output\n","print(skewness)\n","if skewness > 0:\n","    print(\"Positive Skewness\")\n","else:\n","    print(\"Negative Skewness\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ViW_P60A7DEv","executionInfo":{"status":"ok","timestamp":1739881880251,"user_tz":0,"elapsed":20,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"ac593fda-15c2-4414-cad8-410a0673bbee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.11018144822285272\n","Positive Skewness\n"]}]},{"cell_type":"code","source":["#compare the skewness for TV, Radio, Social Media and Infleuncer\n","print(df['TV'].skew())\n","print(df['Radio'].skew())\n","print(df['Social Media'].skew())\n","print(df['Influencer'].skew())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OXi9Dzic7XXS","executionInfo":{"status":"ok","timestamp":1739881880252,"user_tz":0,"elapsed":18,"user":{"displayName":"SALAMATU MUSTAPHA","userId":"18104687369851089292"}},"outputId":"815940e2-f264-463c-d8b9-974b1f406779"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.11047135712311636\n","0.1260272214094549\n","0.6979818325238913\n","0.0825054540638781\n"]}]},{"cell_type":"markdown","source":["all the variables are positively skewed. social media values appear to be heavily skewed amon the four variables while influencer is the least skewed."],"metadata":{"id":"Vzmkt4hR_wvP"}}]}